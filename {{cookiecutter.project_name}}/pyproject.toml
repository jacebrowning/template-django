[tool.poetry]

name = "{{ cookiecutter.project_name }}"
version = "0.0"
description = ""

authors = ["{{ cookiecutter.full_name }} <you@yourdomain.com>"]
license = "Unlicensed"

[tool.poetry.dependencies]

python = "~3.9"

# Django
django = "~4.0.2"
django-allauth = "*"
django-browser-reload = "^1.3"
django-cors-headers = "*"
django-debug-toolbar = "^3.2.2"
django-extensions = "*"

# API
djangorestframework = "~3.12.4"
pytz = "*" # required by 'djangorestframework' until it supports Django 4.x
drf-nested-routers = "~0.93.4"
drf-yasg = "~1.20"

# Storage
dj-database-url = "~0.4.2"
psycopg2-binary = "^2.9.1"
redis = "^4.0.2"

# Utilities
faker = "*"
minilog = "^2.0"
pygraphviz = { version = "^1.7", optional = true }

# Deployment
gunicorn = "^20.1"
uvicorn = "~0.17"
whitenoise = "^5.3"
bugsnag = "^4.1.1"

[tool.poetry.dev-dependencies]

# Formatting
black = "^22.1"
isort = "^5.10"

# Linters
pylint = "~2.12.2"
mypy = "~0.931"
django-stubs = "~1.9.0"
types-freezegun = "*"
types-requests = "*"

# Testing
pytest = "^6.2.5"
pytest-django = "^4.5.2"
pytest-describe = "^2.0"
pytest-expecter = "^2.3"
pytest-randomly = "*"
pytest-cov = "^2.8.0"
freezegun = "*"
coverage = "^5.0"
coveragespace = "^4.0"

# E2E
fire = "*"
honcho = "^1.1"
splinter = "~0.16.0"

# Tooling
ipython = "*"
MacFSEvents = { version = "*", platform = "darwin" }
pync = { version = "*", platform = "darwin" }
sniffer = "*"

[tool.poetry.extras]

uml = ["pygraphviz"]

[tool.black]

quiet = true

[tool.isort]

profile = "black"

known_django = "django"
sections = "FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

[tool.mypy]

ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true

cache_dir = ".cache/mypy/"

plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]

django_settings_module = "config.settings.local"

[tool.pytest.ini_options]

DJANGO_SETTINGS_MODULE = "config.settings.test"

addopts = """
--strict-markers
--pdbcls=tests.debugger:Debugger

--quiet
-r sxX

--fail-on-template-vars

--cov={{cookiecutter.project_name}}
--cov-report=html
--cov-report=term-missing:skip-covered
--no-cov-on-fail
"""

cache_dir = ".cache/pytest/"

markers = []
